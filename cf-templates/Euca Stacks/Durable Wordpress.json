{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Deploy Wordpress with ELB, Autoscaling.",

  "Parameters" : {
    "ImageId" : {
      "Description" : "The ID of the Ubuntu image to use for the console",
      "Type" : "String",
      "ConstraintDescription" : "Must be the ID of an Ubuntu image on the cloud."
    },
    "InstanceType" : {
      "Description" : "WebServer EC2 instance type",
      "Type" : "String",
      "Default" : "m1.small",
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },
    "KeyName" : {
      "Description" : "The EC2 Key Pair to allow SSH access to the instances",
      "Type" : "String",
      "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
    },
    "SSLCertArn" : {
      "Description" : "The ARN of the uploaded SSL cert to use for the ELB",
      "Type" : "String",
      "ConstraintDescription" : "Must be the ARN of an SSL cert uploaded to IAM."
    },
    "SSHLocation" : {
      "Description" : "The IP address range that can be used to SSH to the EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    }
  },

  "Resources" : {
    "ConsoleScalingGroup" : {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "Properties" : {
        "AvailabilityZones" : { "Fn::GetAZs" : ""},
        "LaunchConfigurationName" : { "Ref" : "ConsoleLaunchConfig" },
        "MinSize" : "2",
        "DesiredSize" : "2",
        "MaxSize" : "3",
        "LoadBalancerNames" : [ { "Ref" : "ConsoleELB" } ]
      }
    },

    "ConsoleLaunchConfig" : {
      "Type" : "AWS::AutoScaling::LaunchConfiguration",
      "Metadata" : {
        "Comment" : "Install a simple application"
      },
      "Properties" : {
        "KeyName" : { "Ref" : "KeyName" },
        "ImageId" : { "Ref" : "ImageId" },
        "SecurityGroups" : [ { "Ref" : "ConsoleSecurityGroup" } ],
        "InstanceType" : { "Ref" : "InstanceType" },
        "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
            "#cloud-config\n",
            "apt_update: true\n",
            "\n",
            "packages:\n",
            " - wordpress\n",
            " - mysql-server\n",
            " - apache2-mpm-prefork\n",
            " - php5\n",
            " - php5-mysql\n",
            " - libapache2-mod-php5\n",
            " - curl\n",
            " - postfix\n",
            " - mlocate\n",
            "\n",
            "configapache:\n",
            " - &config_apache |\n",
            "   public_hostname=$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4)\n",
            "   public_ipv4=$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4)\n",
            "       ServerAdmin webmaster@localhost\n",
            "   cat > /etc/apache2/sites-available/wordpress <<EOF\n",
            "   <VirtualHost *:80>\n",
            "       UseCanonicalName off\n",
            "       Options All\n",
            "       ServerName $public_hostname\n",
            "       ServerAlias $public_ipv4\n",
            "\n",
            "       VirtualDocumentRoot /var/www/%0\n",
            "       RewriteEngine on\n",
            "       RewriteRule ^/wp-uploads/(.*)$ /var/www/wp-uploads/%{HTTP_HOST}/\\$1\n",
            "\n",
            "       ErrorLog \\${APACHE_LOG_DIR}/wordpress-error.log\n",
            "       LogLevel warn\n",
            "       CustomLog \\${APACHE_LOG_DIR}/wordpress-access.log combined\n",
            "   </VirtualHost>\n",
            "   EOF\n",
            "   a2enmod rewrite vhost_alias\n",
            "   a2ensite wordpress\n",
            "\n",
            "configpostfix:\n",
            " - &config_postfix |\n",
            "   public_hostname=$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4)\n",
            "   echo $public_hostname > /etc/mailname\n",
            "   postconf -e myhostname=$public_hostname\n",
            "   postconf -e mydestination=$public_hostname,localhost\n",
            "   postfix reload\n",
            "\n",
            "configmysql:\n",
            " - &config_mysql |\n",
            "   public_hostname=$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4)\n",
            "   /etc/init.d/mysql restart\n",
            "   bash /usr/share/doc/wordpress/examples/setup-mysql -n wordpress $public_hostname\n",
            "   ln -s /usr/share/wordpress /var/www/$public_hostname\n",
            "\n",
            "restartapache:\n",
            " - &restart_apache |\n",
            "   /etc/init.d/apache2 restart\n",
            "\n",
            "runcmd:\n",
            " - [ sh, -c, *config_postfix ]\n",
            " - [ sh, -c, *config_mysql ]\n",
            " - [ sh, -c, *config_apache ]\n",
            " - [ sh, -c, *restart_apache ]\n",
            " - touch /tmp/done\n"
        ]]}}
      }
    },

    "ConsoleELB" : {
      "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties" : {
        "AvailabilityZones" : { "Fn::GetAZs" : "" },
        "CrossZone" : "true",
        "Listeners" : [ {
          "LoadBalancerPort" : "443",
          "InstancePort" : "80",
          "Protocol" : "HTTPS",
          "InstanceProtocol" : "HTTP",
          "SSLCertificateId" : { "Ref" : "SSLCertArn" }
        } ],
        "HealthCheck" : {
          "Target" : "HTTP:80/",
          "HealthyThreshold" : "3",
          "UnhealthyThreshold" : "5",
          "Interval" : "30",
          "Timeout" : "5"
        }
      }
    },

    "ConsoleSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable SSH access and HTTP from the load balancer only",
        "SecurityGroupIngress" : [ {
          "IpProtocol" : "tcp",
          "FromPort" : "22",
          "ToPort" : "22",
          "CidrIp" : { "Ref" : "SSHLocation"}
        },
        {
          "IpProtocol" : "tcp",
          "FromPort" : "80",
          "ToPort" : "80",
          "SourceSecurityGroupOwnerId" : {"Fn::GetAtt" : ["ConsoleELB", "SourceSecurityGroup.OwnerAlias"]},
          "SourceSecurityGroupName" : {"Fn::GetAtt" : ["ConsoleELB", "SourceSecurityGroup.GroupName"]}
        } ]
      }
    }
  },

  "Outputs" : {
    "URL" : {
      "Description" : "The URL of the website",
      "Value" :  { "Fn::Join" : [ "", [ "https://", { "Fn::GetAtt" : [ "ConsoleELB", "DNSName" ]}]]}
    }
  }
}
